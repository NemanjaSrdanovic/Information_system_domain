{"remainingRequest":"C:\\Users\\BF\\Desktop\\IMSE\\imse\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\BF\\Desktop\\IMSE\\imse\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\BF\\Desktop\\IMSE\\imse\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\BF\\Desktop\\IMSE\\imse\\frontend\\src\\components\\SignUp.vue?vue&type=template&id=d21a9130&scoped=true&","dependencies":[{"path":"C:\\Users\\BF\\Desktop\\IMSE\\imse\\frontend\\src\\components\\SignUp.vue","mtime":1610394687804},{"path":"C:\\Users\\BF\\Desktop\\IMSE\\imse\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\BF\\Desktop\\IMSE\\imse\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\BF\\Desktop\\IMSE\\imse\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\BF\\Desktop\\IMSE\\imse\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}