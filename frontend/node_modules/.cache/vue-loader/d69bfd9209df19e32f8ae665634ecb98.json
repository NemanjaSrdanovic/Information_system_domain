{"remainingRequest":"C:\\Users\\BF\\Desktop\\Universität\\2020WS\\2. IMSE\\WS\\1. Project\\springboot(Java)\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\BF\\Desktop\\Universität\\2020WS\\2. IMSE\\WS\\1. Project\\springboot(Java)\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\BF\\Desktop\\Universität\\2020WS\\2. IMSE\\WS\\1. Project\\springboot(Java)\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\BF\\Desktop\\Universität\\2020WS\\2. IMSE\\WS\\1. Project\\springboot(Java)\\frontend\\src\\components\\SignIn.vue?vue&type=template&id=fb473e1c&scoped=true&","dependencies":[{"path":"C:\\Users\\BF\\Desktop\\Universität\\2020WS\\2. IMSE\\WS\\1. Project\\springboot(Java)\\frontend\\src\\components\\SignIn.vue","mtime":1600351075689},{"path":"C:\\Users\\BF\\Desktop\\Universität\\2020WS\\2. IMSE\\WS\\1. Project\\springboot(Java)\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\BF\\Desktop\\Universität\\2020WS\\2. IMSE\\WS\\1. Project\\springboot(Java)\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\BF\\Desktop\\Universität\\2020WS\\2. IMSE\\WS\\1. Project\\springboot(Java)\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\BF\\Desktop\\Universität\\2020WS\\2. IMSE\\WS\\1. Project\\springboot(Java)\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJhcnRpY2xlIiwgWwogICAgX2MoCiAgICAgICJkaXYiLAogICAgICB7IHN0YXRpY0NsYXNzOiAiY29udGFpbmVyIiwgY2xhc3M6IHsgInNpZ24tdXAtYWN0aXZlIjogX3ZtLnNpZ25VcCB9IH0sCiAgICAgIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm92ZXJsYXktY29udGFpbmVyIiB9LCBbCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm92ZXJsYXkiIH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJvdmVybGF5LWxlZnQiIH0sIFsKICAgICAgICAgICAgICBfYygiaDIiLCBbX3ZtLl92KCJXZWxjb21lIEJhY2shIildKSwKICAgICAgICAgICAgICBfYygicCIsIFtfdm0uX3YoIlBsZWFzZSBsb2dpbiB3aXRoIHlvdXIgcGVyc29uYWwgaW5mbyIpXSksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpbnZlcnQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogInNpZ25JbiIgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICBfdm0uc2lnblVwID0gIV92bS5zaWduVXAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbX3ZtLl92KCJTaWduIEluIildCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJvdmVybGF5LXJpZ2h0IiB9LCBbCiAgICAgICAgICAgICAgX2MoImgyIiwgW192bS5fdigiSGVsbG8sIEZyaWVuZCEiKV0pLAogICAgICAgICAgICAgIF9jKCJwIiwgW192bS5fdigiUGxlYXNlIGVudGVyIHlvdXIgcGVyc29uYWwgZGV0YWlscyIpXSksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpbnZlcnQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogInNpZ25VcCIgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICBfdm0uc2lnblVwID0gIV92bS5zaWduVXAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbX3ZtLl92KCJTaWduIFVwIildCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICBdKSwKICAgICAgICBfYygKICAgICAgICAgICJmb3JtIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzaWduLXVwIiwKICAgICAgICAgICAgYXR0cnM6IHsgYWN0aW9uOiAiIyIgfSwKICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICBzdWJtaXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KCkKICAgICAgICAgICAgICAgIHJldHVybiBfdm0ucmVnaXN0ZXJVc2VyKCRldmVudCkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKCJoMiIsIFtfdm0uX3YoIkNyZWF0ZSBsb2dpbiIpXSksCiAgICAgICAgICAgIF9jKCJkaXYiLCBbX3ZtLl92KCJVc2UgeW91ciBlbWFpbCBmb3IgcmVnaXN0cmF0aW9uIildKSwKICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLm5hbWUsCiAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJuYW1lIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogInRleHQiLCBwbGFjZWhvbGRlcjogIk5hbWUiIH0sCiAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5uYW1lIH0sCiAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgX3ZtLm5hbWUgPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KSwKICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmVtYWlsLAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiZW1haWwiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAiZW1haWwiLCBwbGFjZWhvbGRlcjogIkVtYWlsIiB9LAogICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0uZW1haWwgfSwKICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICBfdm0uZW1haWwgPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KSwKICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnBhc3N3b3JkLAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAicGFzc3dvcmQiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAicGFzc3dvcmQiLCBwbGFjZWhvbGRlcjogIlBhc3N3b3JkIiB9LAogICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0ucGFzc3dvcmQgfSwKICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICBfdm0ucGFzc3dvcmQgPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KSwKICAgICAgICAgICAgX2MoImJ1dHRvbiIsIFtfdm0uX3YoIlNpZ24gVXAiKV0pCiAgICAgICAgICBdCiAgICAgICAgKSwKICAgICAgICBfdm0uX20oMCkKICAgICAgXQogICAgKQogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJmb3JtIiwgeyBzdGF0aWNDbGFzczogInNpZ24taW4iLCBhdHRyczogeyBhY3Rpb246ICIjIiB9IH0sIFsKICAgICAgX2MoImgyIiwgW192bS5fdigiU2lnbiBJbiIpXSksCiAgICAgIF9jKCJkaXYiLCBbX3ZtLl92KCJVc2UgeW91ciBhY2NvdW50IildKSwKICAgICAgX2MoImlucHV0IiwgeyBhdHRyczogeyB0eXBlOiAiZW1haWwiLCBwbGFjZWhvbGRlcjogIkVtYWlsIiB9IH0pLAogICAgICBfYygiaW5wdXQiLCB7IGF0dHJzOiB7IHR5cGU6ICJwYXNzd29yZCIsIHBsYWNlaG9sZGVyOiAiUGFzc3dvcmQiIH0gfSksCiAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiIyIgfSB9LCBbX3ZtLl92KCJGb3Jnb3QgeW91ciBwYXNzd29yZD8iKV0pLAogICAgICBfYygiYnV0dG9uIiwgW192bS5fdigiU2lnbiBJbiIpXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}