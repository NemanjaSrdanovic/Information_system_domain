{"remainingRequest":"C:\\Users\\BF\\Desktop\\Imse Git\\imse\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\BF\\Desktop\\Imse Git\\imse\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\BF\\Desktop\\Imse Git\\imse\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\BF\\Desktop\\Imse Git\\imse\\frontend\\src\\components\\AdminSidebar.vue?vue&type=template&id=fbcb4286&","dependencies":[{"path":"C:\\Users\\BF\\Desktop\\Imse Git\\imse\\frontend\\src\\components\\AdminSidebar.vue","mtime":1609963950843},{"path":"C:\\Users\\BF\\Desktop\\Imse Git\\imse\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\BF\\Desktop\\Imse Git\\imse\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\BF\\Desktop\\Imse Git\\imse\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\BF\\Desktop\\Imse Git\\imse\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}